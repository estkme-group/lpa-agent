name: Go

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/Hydrogen

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21
        id: go

      - name: Build frontend assets
        run: |
          cd frontend
          npm install
          npm run build
          cd ..

      - name: Set OS-specific variables
        run: |
          if [ "${{ matrix.goos }}" == "windows" ]; then
            EXT=".exe"
          else
            EXT=""
          fi
          echo "OS_EXTENSION=${EXT}" >> $GITHUB_ENV

      - name: Build backend
        run: |
          go mod tidy
          go mod vendor
          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags="-w -s" -o lpac-agent-${{ matrix.goos }}-${{ matrix.goarch }}$OS_EXTENSION cmd/lpa-agent/*.go
          chmod +x lpac-agent-${{ matrix.goos }}-${{ matrix.goarch }}$OS_EXTENSION

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: lpac-agent-${{ matrix.goos }}-${{ matrix.goarch }}$OS_EXTENSION
          path: lpac-agent-${{ matrix.goos }}-${{ matrix.goarch }}$OS_EXTENSION

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            lpac-agent-${{ matrix.goos }}-${{ matrix.goarch }}$OS_EXTENSION
